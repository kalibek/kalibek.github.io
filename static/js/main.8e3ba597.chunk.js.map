{"version":3,"sources":["component/Menu.tsx","component/CodeBlock.tsx","component/Content.tsx","component/TagSearch.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Menu","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onClick","article","topic","props","onChoose","inherits","createClass","key","value","_this2","topics","react_default","a","createElement","map","t","subject","articles","path","react_router_dom","to","e","title","Component","CodeBlock","codeEl","setRef","bind","assertThisInitialized","el","highlightCode","hljs","highlightBlock","ref","className","language","Content","state","author","content","date","tags","markdown","_componentWillReceiveProps","asyncToGenerator","regenerator_default","mark","_callee","nextProps","wrap","_context","prev","next","match","params","loadContent","stop","_x","_componentDidMount","_callee2","_context2","_loadContent","_callee3","data","_context3","fetch","then","res","text","sent","safeLoad","setState","objectSpread","_x2","_this$state","react_markdown_default","source","escapeHtml","renderers","code","TagSearch","found","_ref","tag","toConsumableArray","App","onResize","mobile","window","innerWidth","setTitle","showMenu","document","toggleMenu","location","pathname","addEventListener","basename","process","src","Menu_Menu","react_router","exact","component","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e3ba597.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Article, MenuProps } from '../model';\nimport { Link } from 'react-router-dom';\n\nexport class Menu extends Component <MenuProps> {\n\n  onClick = (article: Article, topic: string) => {\n    this.props.onChoose(article, topic);\n  };\n\n\n  render(): React.ReactNode {\n    const { topics } = this.props;\n    return <div>\n      {topics.map(t => <div key={t.subject}>\n        <h4>{t.subject}</h4>\n        <ul>\n          {t.articles.map(a => <li key={a.path}>\n            <Link to={a.path} onClick={(e => this.onClick(a, t.subject))}>{a.title}</Link>\n          </li>)}\n        </ul>\n      </div>)}\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport hljs from 'highlight.js'\n\ninterface CodeBlockProps {\n  value: string,\n  language?: string\n}\n\nexport class CodeBlock extends Component<CodeBlockProps> {\n  private codeEl: any;\n\n  constructor(props: CodeBlockProps) {\n    super(props);\n    this.setRef = this.setRef.bind(this)\n  }\n\n  setRef(el: any) {\n    this.codeEl = el\n  }\n\n  componentDidMount() {\n    this.highlightCode()\n  }\n\n  componentDidUpdate() {\n    this.highlightCode()\n  }\n\n  highlightCode() {\n    hljs.highlightBlock(this.codeEl)\n  }\n\n  render() {\n    return (\n      <pre>\n        <code ref={this.setRef} className={`language-${this.props.language}`}>\n          {this.props.value}\n        </code>\n      </pre>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { safeLoad } from 'js-yaml'\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\nimport { ContentProps, ContentState } from '../model';\nimport { CodeBlock } from './CodeBlock';\n\nexport class Content extends Component<RouteComponentProps<ContentProps>, ContentState> {\n\n  constructor(props: RouteComponentProps<ContentProps>) {\n    super(props);\n    this.state = {\n      article: {\n        author: \"none\",\n        content: \"none\",\n        date: \"none\",\n        tags: []\n      },\n      markdown: \"\"\n    }\n  }\n\n  async componentWillReceiveProps(nextProps: RouteComponentProps<ContentProps>) {\n    const path = nextProps.match.params.path || \"default-page\";\n    await this.loadContent(path)\n  }\n\n  async componentDidMount() {\n    const path = this.props.match.params.path || \"default-page\";\n    await this.loadContent(path)\n  }\n\n  async loadContent(path: string) {\n    const data = await fetch(`/contents/${path}.yml`).then(res => res.text());\n    let article = safeLoad(data).article;\n    const markdown = await fetch(`/articles/${article.content}`).then(res => res.text());\n\n    this.setState((prev, props) => {\n      return {\n        ...prev,\n        article,\n        markdown\n      }\n    })\n  }\n\n\n  render() {\n    const { article, markdown } = this.state;\n    return <div className=\"markdown-body\">\n      <ReactMarkdown source={markdown} escapeHtml={false}\n                     renderers={{code: CodeBlock}}\n      />\n      <div className=\"author\"><i>{article.author}</i> at {article.date}</div>\n      <div>Tags: {article.tags.map(t => <span className=\"tag\" key={t}>\n        <Link to={`/tags/${t}`}>{t}</Link>\n      </span>)}</div>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Article, Topic } from '../model';\nimport { safeLoad } from 'js-yaml';\nimport { Link } from 'react-router-dom';\n\ninterface TagSearchRouteProps {\n  tag: string;\n}\n\ninterface TagSearchState {\n  found: Article[]\n}\n\nexport class TagSearch extends Component<RouteComponentProps<TagSearchRouteProps>, TagSearchState> {\n\n  constructor(props: RouteComponentProps<TagSearchRouteProps>) {\n    super(props);\n    this.state = {\n      found: []\n    }\n  }\n\n  async componentDidMount() {\n    const data = await fetch(`/contents/index.yml`).then(res => res.text());\n    const topics: Topic[] = safeLoad(data).topics;\n    topics.map(topic => {\n      topic.articles.map(async article => {\n        const path = article.path === '/' ? \"default-page\" : article.path;\n        const data = await fetch(`/contents/${path}.yml`).then(res => res.text());\n        let details = safeLoad(data).article;\n        details.tags.map((t: string) => {\n          if (t == this.props.match.params.tag) {\n            this.setState((prev, props) => {\n              return { ...prev, found: [...prev.found, article] }\n            });\n          }\n        });\n      });\n    });\n  }\n\n  render() {\n    return <div>results found for: {this.props.match.params.tag}\n      <ol>\n        {this.state.found.map(a => <li key={a.path}>\n          <Link to={a.path}>{a.title}</Link>\n        </li>)}\n      </ol>\n    </div>;\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { Menu } from './component/Menu';\nimport { Content } from './component/Content';\nimport { AppState, Article, Topic } from './model';\nimport { safeLoad } from 'js-yaml';\nimport { TagSearch } from './component/TagSearch';\n\n\nclass App extends Component<{}, AppState> {\n\n  constructor(props: any) {\n    super(props);\n    const title = 'Home';\n    this.state = {\n      article: {\n        title,\n        path: '',\n      },\n      topic: '',\n      topics: [],\n      mobile: false,\n      showMenu: false\n    };\n    document.title = title;\n\n  }\n\n  async componentDidMount() {\n    let path = window.location.pathname;\n    const data = await fetch(`/contents/index.yml`).then(res => res.text());\n    const topics: Topic[] = safeLoad(data).topics;\n    let article: Article;\n    let topic = '';\n    topics.map(t => {\n      t.articles.map(a => {\n        if (a.path === path) {\n          article = a;\n          topic = t.subject;\n        }\n      });\n    });\n\n    this.setState((prev, props) => {\n      return {\n        ...prev, topics, topic, article\n      }\n    });\n\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n  }\n\n  onResize = () => {\n    const mobile = window.innerWidth < 901;\n    this.setState((prev, props) => {\n      return {\n        ...prev, mobile\n      }\n    })\n  };\n\n  setTitle = (article: Article, topic: string) => {\n    this.setState((prev, props) => {\n      return {\n        ...prev,\n        article,\n        topic,\n        showMenu: false\n      }\n    });\n    document.title = article.title;\n  };\n\n  toggleMenu = () => {\n    this.setState((prev, props) => {\n      return { ...prev, showMenu: !prev.showMenu }\n    });\n  };\n\n  render() {\n    const { topic, topics } = this.state;\n    const article = this.state.article || {\n      title: \"search\",\n      path: \"/\"\n    };\n    const { title } = article;\n    const showMenu = !this.state.mobile || this.state.showMenu;\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div className=\"Logo\">\n            <Link to=\"/about\"><img src=\"https://www.gravatar.com/avatar/1a52eb773d66f8a2500f1fe19d85d004?s=32\"/> Kalibek</Link>\n          </div>\n          <div className=\"Header\">\n            <span className=\"menu-toggle\" onClick={this.toggleMenu}><i className=\"fas fa-bars\"/></span>\n            <small><b>{topic}</b> - {title}</small>\n          </div>\n          {showMenu ?\n            <div className=\"Menu\">\n              <Menu onChoose={this.setTitle} article={article} topics={topics}/>\n            </div> : \"\"}\n          <div className=\"Content\">\n            <Switch>\n              <Route exact path=\"/\" component={Content}/>\n              <Route path=\"/tags/:tag\" component={TagSearch}/>\n              <Route path=\"/:path\" component={Content}/>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}